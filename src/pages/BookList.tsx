import React, { useEffect, useState } from "react";
import { Button, message, Space, Table, Popconfirm, Image, Input } from "antd";
import { useNavigate } from "react-router-dom";
import { api } from "../services/api";

const { Search } = Input;

interface Book {
    id: number;
    title: string;
    author: string;
    price: number;
    coverPath?: string;
}

export const BookList: React.FC = () => {
    const [books, setBooks] = useState<Book[]>([]);
    const [filteredBooks, setFilteredBooks] = useState<Book[]>([]);
    const [loading, setLoading] = useState(false);
    const navigate = useNavigate();

    const fetchBooks = async () => {
        setLoading(true);
        try {
            const response = await api.get("/books");
            setBooks(response.data);
            setFilteredBooks(response.data); // üëà –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ñ–∏–ª—å—Ç—Ä
        } catch {
            message.error("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–Ω–∏–≥–∏");
        } finally {
            setLoading(false);
        }
    };

    const handleSearch = (value: string) => {
        const lower = value.toLowerCase();
        const filtered = books.filter(
            (book) =>
                book.title.toLowerCase().includes(lower) ||
                book.author.toLowerCase().includes(lower)
        );
        setFilteredBooks(filtered);
    };

    const handleDelete = async (id: number) => {
        try {
            await api.delete(`/books/${id}`);
            message.success("–ö–Ω–∏–≥–∞ —É–¥–∞–ª–µ–Ω–∞");
            fetchBooks();
        } catch {
            message.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∫–Ω–∏–≥–∏");
        }
    };

    useEffect(() => {
        fetchBooks();
    }, []);

    const columns = [
        {
            title: "–û–±–ª–æ–∂–∫–∞",
            dataIndex: "coverPath",
            key: "coverPath",
            render: (coverPath: string | undefined) =>
                coverPath ? (
                    <Image
                        src={"http://213.109.146.205:5052/" + coverPath}
                        alt="–û–±–ª–æ–∂–∫–∞"
                        width={50}
                        height={70}
                        style={{ objectFit: "cover", borderRadius: 4 }}
                        preview={true}
                    />
                ) : (
                    <span style={{ color: "#aaa" }}>–ù–µ—Ç</span>
                ),
        },
        {
            title: "–ù–∞–∑–≤–∞–Ω–∏–µ",
            dataIndex: "title",
            key: "title",
        },
        {
            title: "–ê–≤—Ç–æ—Ä",
            dataIndex: "author",
            key: "author",
        },
        {
            title: "–¶–µ–Ω–∞",
            dataIndex: "price",
            key: "price",
            render: (price: number) => `${price} ‚Ç∏`,
        },
        {
            title: "–î–µ–π—Å—Ç–≤–∏—è",
            key: "actions",
            render: (_: any, record: Book) => (
                <Space>
                    <Button
                        type="primary"
                        onClick={() => navigate(`/dashboard/books/edit/${record.id}`)}
                    >
                        –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                    </Button>
                    <Popconfirm
                        title="–£–¥–∞–ª–∏—Ç—å —ç—Ç—É –∫–Ω–∏–≥—É?"
                        okText="–î–∞"
                        cancelText="–ù–µ—Ç"
                        onConfirm={() => handleDelete(record.id)}
                    >
                        <Button danger>–£–¥–∞–ª–∏—Ç—å</Button>
                    </Popconfirm>
                </Space>
            ),
        },
    ];

    return (
        <>
            <Space style={{ marginBottom: 16, width: "100%", justifyContent: "space-between" }}>
                <Search
                    placeholder="–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏–ª–∏ –∞–≤—Ç–æ—Ä—É"
                    allowClear
                    enterButton="–ü–æ–∏—Å–∫"
                    onSearch={handleSearch}
                    style={{ maxWidth: 400 }}
                />
                <Button type="primary" onClick={() => navigate("/dashboard/books/add")}>
                    –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–∏–≥—É
                </Button>
            </Space>

            <Table
                dataSource={filteredBooks}
                columns={columns}
                rowKey="id"
                loading={loading}
                pagination={{ pageSize: 10 }}
            />
        </>
    );
};